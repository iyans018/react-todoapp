{"version":3,"sources":["Components/Form/Form.jsx","Components/Items/Items.jsx","Components/ButtonClear/ButtonClear.jsx","App.js","index.js"],"names":["Form","props","onSubmit","submit","className","type","value","onChange","change","placeholder","Items","items","map","item","id","todoText","status","onClick","complete","remove","ButtonClear","click","App","useState","text","setText","todoList","setTodoList","e","target","inputText","preventDefault","Date","now","alert","handleSubmit","oldList","list","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAaeA,EAXF,SAACC,GACV,OACI,sBAAMC,SAAUD,EAAME,OAAtB,SACI,sBAAKC,UAAU,iBAAf,UACI,uBAAOC,KAAK,OAAOC,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,OAAQC,YAAY,4BAC3E,wBAAQJ,KAAK,SAAb,uBCcDK,EAnBD,SAACT,GACX,OACI,mCACKA,EAAMU,MAAMC,KAAI,SAACC,GAAU,IAChBC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,SAAUC,EAAWH,EAAXG,OACtB,OACI,sBAAcZ,UAAU,YAAxB,UACI,mBAAGA,UAAS,oBAA0B,cAAXY,EAAyB,YAAc,IAAlE,SAAyED,IACzE,gCACI,wBAAQX,UAAU,WAAWa,QAAS,kBAAMhB,EAAMiB,SAASJ,IAA3D,kBACA,wBAAQV,UAAU,aAAaa,QAAS,kBAAMhB,EAAMkB,OAAOL,IAA3D,yBAJEA,SCEfM,EARK,SAACnB,GACjB,OACI,mCACI,wBAAQG,UAAU,YAAYa,QAAShB,EAAMoB,MAA7C,4BCkDGC,G,MAhDH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACPC,EADO,KACDC,EADC,OAEkBF,mBAAS,IAF3B,mBAEPG,EAFO,KAEGC,EAFH,KAoCd,OACI,eAAC,WAAD,WACI,oBAAIvB,UAAU,QAAd,gDACA,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,CAAME,MAAOkB,EAAMhB,OApCV,SAACoB,GAClBH,EAAQG,EAAEC,OAAOvB,QAmCgCH,OAAQ,SAACyB,GAAD,OAhCxC,SAACA,EAAGE,GACrBF,EAAEG,iBACEP,EACAG,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAACZ,GAAGkB,KAAKC,MAAOlB,SAASe,EAAWd,OAAO,cAErEkB,MAAM,iCAEVT,EAAQ,IAyBwDU,CAAaP,EAAGJ,MACxE,cAAC,EAAD,CAAOb,MAAOe,EAAUR,SAvBb,SAACJ,GACpBa,GAAY,SAACS,GAET,OADcA,EAAQxB,KAAI,SAACyB,GAAD,OAAUA,EAAKvB,KAAOA,EAAZ,2BAAsBuB,GAAtB,IAA4BrB,OAAQ,cAAgBqB,SAqBlClB,OAhBzC,SAACL,GAClBa,GAAY,SAACS,GAET,OADcA,EAAQE,QAAO,SAACD,GAAD,OAAUA,EAAKvB,KAAOA,WAe/C,cAAC,EAAD,CAAaO,MAVL,WAChBM,EAAY,eCpCpBY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3813be6b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = (props) => {\n    return (\n        <form onSubmit={props.submit}>\n            <div className=\"form-container\">\n                <input type=\"text\" value={props.value} onChange={props.change} placeholder=\"What do you want to do!\"/>\n                <button type=\"submit\">Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form;\n","import React from 'react';\n\nconst Items = (props) => {\n    return (\n        <>\n            {props.items.map((item) => {\n                const { id, todoText, status } = item;\n                return (\n                    <div key={id} className=\"todo-item\">\n                        <p className={`todo-text ${status === 'completed' ? \"completed\" : \"\"}`}>{todoText}</p>\n                        <div>\n                            <button className=\"btn-done\" onClick={() => props.complete(id)}>Done</button>\n                            <button className=\"btn-remove\" onClick={() => props.remove(id)}>Remove</button>\n                        </div>\n                    </div>\n                );\n            })}\n        </>\n    )\n}\n\nexport default Items;\n","import React from 'react';\n\nconst ButtonClear = (props) => {\n    return (\n        <>\n            <button className=\"btn-clear\" onClick={props.click}>Clear Items</button>\n        </>\n    )\n}\n\nexport default ButtonClear;\n","import React, { Fragment, useState } from 'react';\nimport Form from './Components/Form/Form';\nimport Items from './Components/Items/Items';\nimport ButtonClear from './Components/ButtonClear/ButtonClear';\n\nimport './App.css';\n\nconst App = () => {\n    const [text, setText] = useState(\"\");\n    const [todoList, setTodoList] = useState([]);\n\n    const handleChange = (e) => {\n        setText(e.target.value);\n    };\n\n    const handleSubmit = (e, inputText) => {\n        e.preventDefault();\n        if (text) {            \n            setTodoList([...todoList, {id:Date.now(), todoText:inputText, status:'pending'}]);\n        } else {\n            alert('Tidak dapat menambahkan list!');\n        }\n        setText(\"\");\n    };\n\n    const handleComplete = (id) => {\n        setTodoList((oldList) => {\n            let newList = oldList.map((list) => list.id === id ? { ...list, status: 'completed' } : list);\n            return newList;\n        })\n    };\n\n    const handleRemove = (id) => {\n        setTodoList((oldList) => {\n            let newList = oldList.filter((list) => list.id !== id);\n            return newList;\n        });\n    };\n\n    const handleClear = () => {\n        setTodoList([]);\n    };\n\n    return (\n        <Fragment>\n            <h2 className=\"title\">ToDo App by Oktavian Aji Tyas Azis</h2>\n            <div className=\"container\">\n                <Form value={text} change={handleChange} submit={(e) => handleSubmit(e, text)} />\n                <Items items={todoList} complete={handleComplete} remove={handleRemove}  />\n                <ButtonClear click={handleClear} />\n            </div>\n        </Fragment>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}